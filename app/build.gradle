plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.lejik.spacex"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ext {
    coroutines = "1.5.2"
    gson = "2.9.0"
    json = "1.3.2"
    moshi = "1.13.0"
    nav_version = "2.4.2"
    retrofit = "2.9.0"
    picasso = "2.71828"
    paging_version = "3.1.1"
    okhttpLoggingInterceptorVersion = "4.9.0"
    coil = "1.1.1"
    lifecycle = "2.4.0-alpha01"
//    lifecycle_version = "2.6.0-alpha02"
    lifecycle_version = "2.5.1"
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit"
    // Retrofit
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    // OkHttpLogginInterceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"
    // Moshi
    implementation"com.squareup.moshi:moshi-kotlin:$moshi"
    // GSON
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:converter-gson:$gson"
    implementation "com.squareup.picasso:picasso:$picasso"
    implementation"org.jetbrains.kotlinx:kotlinx-serialization-json:$json"
    // Kotlin Android Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    // Picasso
    implementation "com.squareup.picasso:picasso:$picasso"
    // Coil
    implementation "io.coil-kt:coil:$coil"
    // For Kotlin use paging-runtime-ktx
    implementation "androidx.paging:paging-runtime:$paging_version"
    // LifeCycle
//    implementation "lifecycle:lifecycle-runtime-ktx:$lifecycle"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
//    // ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")
//    // ViewModel utilities for Compose
//    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version")
//    // LiveData
//    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
//    // Lifecycles only (without ViewModel or LiveData)
//    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")
//
//    // Saved state module for ViewModel
//    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

}